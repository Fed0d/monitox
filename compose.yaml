services:
  bot:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: monitox_bot
    depends_on:
      - alembic
    environment:
      - TG_TOKEN=7071997578:AAGteu66UY5EMztRSdUvAZwkAGF2NKNY1ac
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_USER=monitox
      - POSTGRES_PASSWORD=monitox
      - POSTGRES_DB=monitox
      - MISTRAL_MODEL=open-mistral-7b
      - MISTRAL_API_KEY=twB4e4eO7UDd0TjsJkiO8jke9Y9VCxhu
    command: python run_bot.py
    ports:
      - "8000:8000"
  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      - TG_TOKEN=7071997578:AAGteu66UY5EMztRSdUvAZwkAGF2NKNY1ac
      - POSTGRES_USER=monitox
      - POSTGRES_PASSWORD=monitox
      - POSTGRES_DB=monitox
      - MISTRAL_MODEL=open-mistral-7b
      - MISTRAL_API_KEY=twB4e4eO7UDd0TjsJkiO8jke9Y9VCxhu
    ports:
      - "5432:5432"
    volumes:
      - ./pgdata:/var/lib/postgresql/data/pgdata
  alembic:
    build:
      context: .
      dockerfile: Dockerfile.alembic
    container_name: alembic_migrator
    depends_on:
      - postgres
    command: alembic upgrade head
  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000"
